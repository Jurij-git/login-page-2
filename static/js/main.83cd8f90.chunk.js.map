{"version":3,"sources":["FormsControls/FormsControls.js","utils/validators/validators.js","ProfileDataForm.jsx","Profile.jsx","profileReducer.js","ProfileContainer.jsx","ProfileRegistered.jsx","ProfileRegisteredContainer.jsx","App.js","serviceWorker.js","reduxStore.js","index.js","FormsControls/FormsControls.module.css","ProfileDataForm.module.css"],"names":["Input","input","meta","props","hasError","touched","error","className","styles","formControl","createField","placeholder","name","validators","component","text","Field","validate","required","value","validateName","match","validateNpi","npi","validateAddress","address","validatePhone","phone","validateEmail","email","maxLengthCreator","maxLength","length","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","style","wrapper","registration_form","title","form_wrap","input_wrap","type","href","submit_btn","Profile","registered","initialValues","formData","saveProfile","initialState","setUserProfile","profileReducer","state","action","ProfileContainer","this","React","Component","connect","profilePage","dispatch","getState","a","ProfileRegistered","fullname","npinumber","businessaddress","telephonenumber","ProfileRegisteredContainer","App","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.83cd8f90.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\n//reusable components\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","//input validators:\r\nexport const required = (value) => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const validateName = (name) => {//return true if passed\r\n    let named = /^[a-zA-Z]+ [a-zA-Z]+$/;\r\n    if(name.match(named)) return undefined;\r\n\r\n    return (\"Wrong name!\");\r\n}\r\n\r\nexport const validateNpi = (npi) => {  //return true if passed\r\n    let npino = /^\\d{10}$/;\r\n    if(npi.match(npino)) return undefined;\r\n\r\n    return(\"Wrong NPI number!\");\r\n}\r\n\r\nexport const validateAddress = (address) => {  //return true if passed\r\n    let addressd = /^[a-zA-Z0-9\\s,'-]*$/;\r\n    if(address.match(addressd)) return undefined;\r\n\r\n    return (\"Wrong address!\");\r\n}\r\n\r\nexport const validatePhone = (phone) => {   //return true if passed\r\n    let phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n    if(phone.match(phoneno)) return undefined;\r\n\r\n    return (\"Wrong phone number!\");\r\n\r\n}\r\n\r\nexport const validateEmail = (email) => {   //return true if passed\r\n    let mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(email.match(mailFormat)) return undefined;\r\n\r\n    return(\"Wrong email address!\");\r\n}\r\n\r\nexport const maxLength50 = (value) => {\r\n    if(value && value.length > 50) return \"Max length is 50 symbols\";\r\n\r\n    return undefined;\r\n}\r\n\r\n//thunk creating length validator\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"./FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"./ProfileDataForm.module.css\";\r\nimport {\r\n    required,\r\n    validateAddress,\r\n    validateEmail,\r\n    validateName,\r\n    validateNpi,\r\n    validatePhone,\r\n    maxLengthCreator\r\n} from \"./utils/validators/validators\";\r\n\r\n//registration form\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div className={style.wrapper}>\r\n            <div className={style.registration_form}>\r\n                <div className={style.title}>\r\n                    Registration Form\r\n                </div>\r\n                <div className={style.form_wrap}>\r\n\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <label>Full Name</label>\r\n                        {createField(\"Full Name\", \"fullname\", [required, validateName, maxLengthCreator(50)], Input)}\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <label>NPI Number</label>\r\n                        {createField(\"NPI Number\", \"npinumber\", [required, validateNpi, maxLengthCreator(50)], Input)}\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <label>Business Address</label>\r\n                        {createField(\"Business Address\", \"businessaddress\", [required, validateAddress, maxLengthCreator(50)], Input)}\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <label>Telephone Number</label>\r\n                        {createField(\"Telephone Number\", \"telephonenumber\", [required, validatePhone, maxLengthCreator(50)], Input)}\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <label>Email</label>\r\n                        {createField(\"Email\", \"email\", [required, validateEmail, maxLengthCreator(50)], Input)}\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        {createField(\"\", \"confirm\", [required], Input, {type: \"checkbox\"})}\r\n                        <label>I agree with <a href=\"#\">terms and conditions</a></label>\r\n                    </div>\r\n\r\n                    <div className={style.input_wrap}>\r\n                        <button className={style.submit_btn}>Register Now</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n//container to define onSubmit\r\nconst Profile = (props) =>{\r\n\r\n    //onSubmit is just calling thunk\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n    }\r\n\r\n    if(props.registered == false)\r\n    {\r\n        return (\r\n            <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Profile;","\r\n//import {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst REGISTRATION_FINISHED = 'REGISTRATION-FINISHED';//yo1\r\n\r\nlet initialState = {\r\n    profile: null,      //profile object with some fields\r\n    registered: false   //registration succeed flag\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,   //copy state\r\n                profile: action.profile   //update profile\r\n            }\r\n        }\r\n        case REGISTRATION_FINISHED: {\r\n            return {\r\n                ...state,   //copy state\r\n                registered: action.registered   //update registration succeed flag\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//saving profile to store\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\n//saving flag registration succeed\r\nexport const registrationFinished = (registered) => {\r\n    return {\r\n        type: REGISTRATION_FINISHED,\r\n        registered\r\n    }\r\n}\r\n\r\n//thunk to call some dispatches\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n\r\n    //there should be post to server API and get from server API if save succeeded to save to store\r\n    //but since there is no server, saving to store immediately\r\n\r\n    dispatch(setUserProfile(profile));\r\n    dispatch(registrationFinished(true));\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {saveProfile} from \"./profileReducer\";\r\n\r\n//container to connect state with form\r\nclass ProfileContainer extends React.Component{\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        registered={this.props.registered}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    registered: state.profilePage.registered\r\n});\r\n\r\nexport default  connect(mapStateToProps, {saveProfile})(ProfileContainer);","import React from 'react';\r\nimport style from \"./ProfileDataForm.module.css\";\r\n\r\n//registration completed form, shown if registration succeed\r\nconst ProfileRegistered = (props) =>{\r\n    if(props.registered == true) {\r\n\r\n        return(\r\n            <div className={style.wrapper}>\r\n                <div className={style.registration_form}>\r\n                    <div className={style.title}>\r\n                        Registered Successfully\r\n                    </div>\r\n                    <div className={style.form_wrap}>\r\n\r\n                        <div className={style.input_wrap}>\r\n                            <label>Full Name</label>\r\n                            {props.profile.fullname}\r\n                        </div>\r\n                        <div className={style.input_wrap}>\r\n                            <label>NPI Number</label>\r\n                            {props.profile.npinumber}\r\n                        </div>\r\n                        <div className={style.input_wrap}>\r\n                            <label>Business Address</label>\r\n                            {props.profile.businessaddress}\r\n                        </div>\r\n                        <div className={style.input_wrap}>\r\n                            <label>Telephone Number</label>\r\n                            {props.profile.telephonenumber}\r\n                        </div>\r\n                        <div className={style.input_wrap}>\r\n                            <label>Email</label>\r\n                            {props.profile.email}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default ProfileRegistered;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ProfileRegistered from \"./ProfileRegistered\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        registered: state.profilePage.registered\r\n    }\r\n}\r\n\r\n//container to connect state with registered form\r\nconst ProfileRegisteredContainer = connect(mapStateToProps, {})(ProfileRegistered);\r\n\r\nexport default ProfileRegisteredContainer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from \"./ProfileContainer\";\nimport ProfileRegisteredContainer from \"./ProfileRegisteredContainer\";\n\nfunction App() {\n\n  return (\n      <div>\n          <ProfileContainer/>\n          <ProfileRegisteredContainer/>\n\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./reduxStore\";\nimport {Provider} from \"react-redux\";\n\nimport {HashRouter, Route} from \"react-router-dom\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App store={store}/>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n    ,document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3F_Fs\",\"error\":\"FormsControls_error__26513\",\"formSummaryError\":\"FormsControls_formSummaryError__O6zAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileDataForm_wrapper__34IwI\",\"registration_form\":\"ProfileDataForm_registration_form__TIGdb\",\"title\":\"ProfileDataForm_title__1Hnfu\",\"form_wrap\":\"ProfileDataForm_form_wrap__39im_\",\"input_wrap\":\"ProfileDataForm_input_wrap__3Btr7\",\"input_grp\":\"ProfileDataForm_input_grp__2i_n-\",\"radio_wrap\":\"ProfileDataForm_radio_wrap__LSHLj\",\"input_radio\":\"ProfileDataForm_input_radio__l-TQe\",\"submit_btn\":\"ProfileDataForm_submit_btn__1jxuP\"};"],"sourceRoot":""}